---
# desc: build container images, perform static tests then push
#       this workflow will only use current as tag container tag reference, dedicated workflow exists for releasing versionned image

name: build-images

on:
  push:

jobs:
  trigger-next-workflows:
    runs-on: ubuntu-22.04
    needs:
      - docker-build
    steps:
      - name: Compute fully qualified image
        run: |
          image_metadata="${{ needs.docker-build.outputs.built_image_metadata }}"
          image_name=$(echo "$image_metadata" | jq -r '.image.name')
          digest=$(echo "$image_metadata" | jq -r '.containerimage.digest')
          test_image_name="${image_name}:${digest}"
          echo "test_image_name=${test_image_name}" >> $GITHUB_ENV

      - name: Test built images
        uses: ./.github/workflows/30-test-images.yml@main
        with:
          test_image_name: ${{ env.test_image_name }}

  docker-build:
    runs-on: ubuntu-latest
    outputs:
      built_image_metadata: ${{ steps.build-image-step.outputs.metadata }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install if required common software tooling
        uses: camunda/infra-global-github-actions/common-tooling@main
        with:
          java-enabled: false
          yarn-enabled: false

      - name: Build image using Camunda docker build
        id: build-image-step
        uses: camunda/infra-global-github-actions/build-docker-image@feature/container-build-multiarch
        with:
          registry_host: ${{ vars.CONTAINER_REGISTRY }}
          registry_username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry_password: ${{ secrets.DOCKERHUB_TOKEN }}
          force_push: true
          image_name: ${{ vars.CONTAINER_IMAGE_NAME }}
          build_context: .
          build_platforms: linux/amd64,linux/arm64
