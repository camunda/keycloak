---
# This file is with bitnami keycloak images > 26.3.2-debian-12-r0
volumes:
    postgres_data:
        driver: local

services:
    postgres:
        image: ${COMPOSE_POSTGRES_IMAGE:-docker.io/postgres:latest}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-keycloak}
            POSTGRES_USER: ${POSTGRES_USER:-keycloak}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
        healthcheck:
            test: [CMD-SHELL, "PGPASSWORD=$${POSTGRES_PASSWORD} psql --username=$${POSTGRES_USER} --host=localhost --dbname=$${POSTGRES_DB} --command='\\\
                      q'"]
            interval: 30s
            timeout: 5s
            retries: 3
        deploy:
            replicas: ${COMPOSE_POSTGRES_DEPLOY_REPLICAS:-1}

    keycloak:
        image: ${COMPOSE_KEYCLOAK_IMAGE:-camunda/keycloak:bitnami-latest}
        environment:
            KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME:-admin}
            KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD:-admin}

            # required since bitnami 26.3.3
            KC_HTTP_RELATIVE_PATH: /
            KC_CACHE: ispn
            KC_CACHE_CONFIG_FILE: /opt/bitnami/keycloak/conf.default/cache-ispn.xml
            KC_PROXY_HEADERS: xforwarded

            # Health and statistics (native KC_* variables)
            KC_HEALTH_ENABLED: ${KC_HEALTH_ENABLED:-true}
            KC_METRICS_ENABLED: ${KC_METRICS_ENABLED:-true}

            # Hostname configuration (native KC_* variables)
            KC_HOSTNAME: ${KC_HOSTNAME:-localhost}
            KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT:-false}
            KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS:-false}
            KC_HTTP_ENABLED: ${KC_HTTP_ENABLED:-true}

            # Logging configuration (native KC_* variables)
            KC_LOG_LEVEL: ${KC_LOG_LEVEL:-INFO}

            # bitnami specifics
            KEYCLOAK_DATABASE_HOST: ${KEYCLOAK_DATABASE_HOST:-postgres}
            KEYCLOAK_DATABASE_PORT: ${KEYCLOAK_DATABASE_PORT:-5432}
            KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DATABASE_NAME:-keycloak}
            KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DATABASE_USER:-keycloak}
            KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD:-password}
            KEYCLOAK_JDBC_DRIVER: ${KEYCLOAK_JDBC_DRIVER:-aws-wrapper:postgresql}
            KEYCLOAK_JDBC_PARAMS: ${KEYCLOAK_JDBC_PARAMS:-}
            KEYCLOAK_EXTRA_ARGS: >-
                --db-driver=${KC_DB_DRIVER:-software.amazon.jdbc.Driver}
                --transaction-xa-enabled=${KC_TRANSACTION_XA_ENABLED:-false}

            # AWS specifics variables
            AWS_STS_REGIONAL_ENDPOINTS: ${AWS_STS_REGIONAL_ENDPOINTS:-}
            AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-}
            AWS_REGION: ${AWS_REGION:-}
            AWS_ROLE_ARN: ${AWS_ROLE_ARN:-}
            AWS_WEB_IDENTITY_TOKEN_FILE: ${AWS_WEB_IDENTITY_TOKEN_FILE:-}

        healthcheck:
            test: curl -f "http://localhost:8080/health/ready"
            interval: 2s
            timeout: 10s
            retries: 30
            start_period: 10s
        ports:
            - 8080:8080
        depends_on:
            - ${COMPOSE_KEYCLOAK_DEPENDS_ON:-postgres}
        volumes:
            - ${COMPOSE_KEYCLOAK_VOLUME_1:-/dev/null:/mynull1} # can be used to inject irsa token


# /kcadm.sh get clients --realm master --server http://localhost:8080 --user admin --password admin
